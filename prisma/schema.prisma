generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        String   @id @default(cuid())
  firstname String
  lastname  String
  address   String
  phone     String
  email     String   @unique
  age       Int
  password  String
  isActive  Boolean  @default(false)
  Review    Review[]
  role      Role     @relation(fields: [roleId], references: [id])
  roleId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Order     Order[]
}

model Role {
  id    String  @id @default(cuid())
  name  String  @unique
  Users Users[]
}

model Order {
  id         String   @id @default(cuid())
  detail     String
  payment    Int
  status     String
  total      Int
  services   Services @relation(fields: [servicesId], references: [id])
  servicesId String
  users      Users    @relation(fields: [usersId], references: [id])
  usersId    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Services {
  id    String  @id @default(cuid())
  type  String
  Order Order[]
}

model Products {
  id           String      @id @default(cuid())
  productName  String
  price        Int
  category     String
  subcategory  String
  description  String
  image        String
  restaurant   Restaurants @relation(fields: [restaurantId], references: [id])
  restaurantId String
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model Restaurants {
  id           String       @id @default(cuid())
  nit          String
  businessName String
  title        String
  phone        String
  address      String[]
  about        String
  location     String[]
  reviews      Review[]
  Products     Products[]
  Gallery      Gallery[]
  Facilities   Facilities[]
}

model Gallery {
  id           String      @id @default(cuid())
  restaurant   Restaurants @relation(fields: [restaurantId], references: [id])
  restaurantId String
  ImageUrl     String
}

model Facilities {
  id           String      @id @default(cuid())
  restaurant   Restaurants @relation(fields: [restaurantId], references: [id])
  restaurantId String
  phone        String
  address      String[]
}

model Review {
  id            String       @id @default(cuid())
  title         String
  rating        Int
  comment       String
  user          Users        @relation(fields: [userId], references: [id])
  userId        String
  Restaurants   Restaurants? @relation(fields: [restaurantsId], references: [id])
  restaurantsId String?
}
